<?xml version="1.0"?>
<section xml:id="ch1_conditionals">
  <title>Conditionals</title>

  <p>
    Conditional statements in Python and Java are very similar.
    In Python we have three patterns:
  </p>

  <subsection xml:id="subsec-simpleif">
    <title>Simple if</title>

    <program language="python">
        <code>
         if condition:
            statement1
            statement2
            ...
        </code>
    </program>

    <p>
      In Java this same pattern is simply written as:
    </p>

    <program language="java">
      <code>
        if (condition) {
            statement1
            statement2
            ...
        }
      </code>
    </program>

    <p>
      Once again you can see that in Java the curly braces define a block rather than indentation.
      In Java the parenthesis around the condition are required because if is technically a function that evaluates to True or False.
    </p>
  </subsection>

  <subsection xml:id="subsec-ifelse">
    <title> if else </title>

    <program language="python">
      <code>
        if condition:
            statement1
            statement2
            ...
        else:
            statement1
            statement2
            ...
      </code>
    </program>

    <p>
      In Java this is written as:
    </p>

    <program language="java">
      <code>
        if (condition) {
            statement1
            statement2
            ...
        } else {
            statement1
            statement2
            ...
        }
      </code>
    </program>
  </subsection>

  <subsection xml:id="subsec-elif">
    <title>else if</title>

    <p>
      Java does not have an elif pattern like Python.
      In Java you can get the functionality of an elif statement by nesting if and else.
      Here is a simple example in both Python and Java.
    </p>

 <program interactive="activecode" language="python" xml:id="condition1" label="condition_1">
      <code>
        grade = int(input('enter a grade'))
        if grade &lt; 60:
            print('F')
        elif grade &lt; 70:
            print('D')
        elif grade &lt; 80:
            print('C')
        elif grade &lt; 90:
            print('B')
        else:
            print('A')
      </code>
    </program>

    <p>
      In Java we have a couple of ways to write this
    </p>

    <program interactive="activecode" language="java" xml:id="condition2" label="condition_2">
      <code>
        public class ElseIf {
            public static void main(String args[]) {
                int grade = 85;
                if (grade &lt; 60) {
                    System.out.println('F');
                } else {
                    if (grade &lt; 70) {
                        System.out.println('F');
                    } else {
                        if (grade &lt; 80) {
                            System.out.println('F');
                        } else {
                            if (grade &lt; 90) {
                                System.out.println('F');
                            } else {
                                System.out.println('F');
                            }
                        }
                    }
                }
            }
        }
      </code>
    </program>

    <p>
      We can get even closer to the elif statement by taking advantage of the Java rule that a single statement does not need to be enclosed in curly braces.
      Since the if is the only statement used in each else we can get away with the following.
    </p>

    <program interactive="activecode" language="java" xml:id="condition3" label="condition_3">
      <code>
         public class ElseIf {
             public static void main(String args[]) {
              int grade = 85;
              if (grade &lt; 60) {
                  System.out.println('F');
              } else if (grade &lt; 70) {
                  System.out.println('D');
              } else if (grade &lt; 80) {
                  System.out.println('C');
              } else if (grade &lt; 90) {
                  System.out.println('B');
              } else  System.out.println('A');
             }
         }
        </code>
    </program>
  </subsection>

  <subsection xml:id="subsec-switch">
    <title>Switch</title>

    <p>
      Java also supports a <c>switch</c> statement that acts something like the elif statement of Python under certain conditions.
      To write the grade program using a switch statement we would use the following:
    </p>

    <program interactive="activecode" language="java" xml:id="condition4" label="condition_4">
      <input>
       public class SwitchUp {
           public static void main(String args[]) {
               int grade = 85;
               int tempgrade = grade / 10;
               switch (tempgrade) {
                   case 10:
                   case 9:
                       System.out.println('A');
                       break;
                   case 8:
                       System.out.println('B');
                       break;
                   case 7:
                       System.out.println('C');
                       break;
                   case 6:
                       System.out.println('A');
                       break;
                   default:
                       System.out.println('F');
               }
           }
       }
      </input>
    </program>

    <p>
      The <c>switch</c> statement is not used very often, and I recommend you do not use it!
      First, it is not as powerful as the <c>else if</c> model because the switch variable can only be compared for equality with an integer or enumerated constant.
      Second it is very easy to forget to put in the <c>break</c> statement.
      If the break statement is left out then then the next alternative will be automatically executed.
      For example if the grade was 95 and the <c>break</c> was omitted from the <c>case 9:</c> alternative then the program would print(out both A and B.)
    </p>
  </subsection>

  <subsection xml:id="subsec-booleanoperators">
    <title>Boolean Operators </title>

      <p>
        The conditionals used in the if statement can be boolean variables, simple comparisons, and compound boolean expressions.
      </p>

      <p>
        Java also supports the boolean expression.
        <c>condition ? trueValue : falseValue</c> This expression can be used to test a condition as part of an assignment statement.
        For example <c>a = a % 2 == 0 ? a*a : 3*x -1</c> In the previous assignment statement the expression <c>a%2 ==0</c> is first checked.
        If it is true then a is assigned the value <c>a * a</c> if it is false then a is assigned the value of <c>3*x-1</c>.
        Of course all of this could have been accomplished using a regular if else statement, but sometimes the convenience of a single statement is too much to resist.
      </p>
    </subsection>
</section>
