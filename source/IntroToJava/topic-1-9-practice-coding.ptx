<?xml version="1.0"?>
<!-- Generated by Docutils 0.19 -->
<section>
  <title>Coding Practice</title>
  <exercises>
    <exercise >
      <statement>
                <p>The following code should print “Mary’s favorite color is blue”.  However, the code has errors.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch4Ex2q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = Mary";
        String color = "blue"
        System.out.println(Name + "'s favorite color is " + color);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "Mary's favorite color is blue";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Line 5 is missing a starting ".  Line 6 is missing a ending ;.  Line 7 has Name when it should be name.  Remember that variable names start with a lowercase letter.


    
                This is the answer to the previous question.

    
    <program xml:id="ch4Ex2a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
       String name = "Mary";
       String color = "blue";
       System.out.println(name + "'s favorite color is " + color);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Line 5 is missing a starting <c>"</c>.  Line 6 is missing a ending <c>;</c>.  Line 7 has <c>Name</c> when it should be <c>name</c>.  Remember that variable names start with a lowercase letter.</p>

<exercise label="ch4Ex2a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch4Ex2a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
       String name = "Mary";
       String color = "blue";
       System.out.println(name + "'s favorite color is " + color);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should print “Gabby’s favorite sport is soccer”.  However, the code has errors.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch4Ex3q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name "Gabby";
        String sport = "soccer;
        System.out.println(Name +
                   "'s favorite sport is " sport);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "Gabby's favorite sport is soccer";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Line 5 is missing a =.  Line 6 is missing the closing ".  Line 7 has Name when it should be name.  Remember that a variable name starts with a lowercase letter.  Line 8 is missing an ending +.

    <program xml:id="ch4Ex3a" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Gabby";
        String sport = "soccer";
        System.out.println(name +
               "'s favorite sport is " + sport);
    }
}
        </input>
<tests>


</tests>

    </program>
            
                <p>Line 5 is missing a <c>=</c>.  Line 6 is missing the closing <c>"</c>.  Line 7 has <c>Name</c> when it should be <c>name</c>.  Remember that a variable name starts with a lowercase letter.  Line 8 is missing an ending <c>+</c>.</p>

    
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should print <c>Your name is Carly and your favorite color is red</c>.  Finish the code so that it prints the output correctly using the variables provided.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch4Ex5q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Carly";
        String color = "red";
        System.out.println();
    }

}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "Your name is Carly and your favorite color is red";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Add the required strings using the + operator and be sure to include spaces as needed.


    
                This is the answer to the previous question.

    
    <program xml:id="ch4Ex5a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Carly";
        String color = "red";
        System.out.println("Your name is " + name
              + " and your favorite color is " + color);
     }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Add the required strings using the <c>+</c> operator and be sure to include spaces as needed.</p>

<exercise label="ch4Ex5a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch4Ex5a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Carly";
        String color = "red";
        System.out.println("Your name is " + name
              + " and your favorite color is " + color);
     }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement/>
      <program interactive="" language="" />
      <solution>
                Use the + operator to append the strings.  Be sure to include spaces as needed.

    <program xml:id="ch4Ex6a" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Justin";
        int age = 16;
        System.out.println("Your name is " + name +
                           " and your age is " + age);

    }
}
        </input>
<tests>


</tests>

    </program>
            
                <p>Use the <c>+</c> operator to append the strings.  Be sure to include spaces as needed.</p>

    
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Write the code to print <c>Julian's favorite color is green.  His favorite food is pizza.</c> using the variables provided.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch4Ex7q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Julian";
        String color = "green";
        String food = "pizza";
        System.out.println();
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "Julian's favorite color is green. His favorite food is pizza.";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Add the strings together using +.  Don’t forget to include spaces and periods at the end of the sentences.


    
                This is the answer to the previous question.

    
    <program xml:id="ch4Ex7a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Julian";
        String color = "green";
        String food = "pizza";
        System.out.println(name + "'s favorite color is " + color +
                           ".  His favorite food is " + food + ".");
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Add the strings together using <c>+</c>.  Don’t forget to include spaces and periods at the end of the sentences.</p>

<exercise label="ch4Ex7a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch4Ex7a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String name = "Julian";
        String color = "green";
        String food = "pizza";
        System.out.println(name + "'s favorite color is " + color +
                           ".  His favorite food is " + food + ".");
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Finish the code below to print your favorite animal and food.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch4Ex8q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String animal =
        String food =
        System.out.println();

    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
     @Test
      public void testPrintStringsA() throws IOException
      {
        String target1 = "+animal";
        //boolean passed1 = checkCodeContains("print animal string", target1);
        String code = getCodeWithoutComments().replaceAll(" ", "").replaceAll("\n","");
                boolean passed1 = code.contains(target1);

                getResults(""+true, ""+passed1, "Code prints animal variable");

        assertTrue(passed1);
      }

       @Test
      public void testPrintStringsB() throws IOException
      {
          String target1 = "+food";
          //boolean passed1 = checkCodeContains("print food string", target1);
          String code = getCodeWithoutComments().replaceAll(" ", "").replaceAll("\n","");
                  boolean passed1 = code.contains(target1);

                  getResults(""+true, ""+passed1, "Code prints food variable");
          assertTrue(passed1);
      }
  }
</tests>

    </program>
      <solution>
                Use + to add strings together.  Add spaces as needed and periods.


    
                This is the answer to the previous question.

    
    <program xml:id="ch4Ex8a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String animal = "horse";
        String food = "chicken";
        System.out.println("My favorite animal is a " + animal + ".  " +
                           "My favorite food is " + food + ".");
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Use <c>+</c> to add strings together.  Add spaces as needed and periods.</p>

<exercise label="ch4Ex8a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch4Ex8a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String animal = "horse";
        String food = "chicken";
        System.out.println("My favorite animal is a " + animal + ".  " +
                           "My favorite food is " + food + ".");
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement/>
      <program interactive="" language="" />
      <solution>
                Add the strings together using +.  Don’t forget to include spaces and periods at the end of the sentences.

    <program xml:id="ch4Ex9a" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        String movie = "The Princess Bride";
        String book = "Harry Potter";
        System.out.println("My favorite movie is " + movie + ".  " +
                           "My favorite book is " + book + ".");

    }
}
        </input>
<tests>


</tests>

    </program>
            
                <p>Add the strings together using <c>+</c>.  Don’t forget to include spaces and periods at the end of the sentences.</p>

    
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should calculate the cost of a trip that is 300 miles if gas is $2.50 a gallon and your car gets 30 miles per gallon.  However, the code has syntax errors, like missing semicolons, wrong case on names, or unmatched <c>"</c> or <c>(</c>.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex1q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int tripMiles = 300
        Double price = 2.50;
        int milesPerGallon = 30;
        double numberOfGallons = tripmiles / milesPerGallon;
        double totalCost = numberOfGallons * price;
        System.out.println(totalCost);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "25.0";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Line 5 is missing a semicolon.  Line 6 has Double instead of double.  Remember that the primitive types all start with a lowercase letter.  Line 8 has tripmiles instead of tripMiles.  Remember that you should uppercase the first letter of each new word to make the variable name easier to read (use camel case).


    
                This is the answer for the previous question.

    
    <program xml:id="ch3Ex1a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int tripMiles = 300;
        double price = 2.50;
        int milesPerGallon = 30;
        double numberOfGallons = tripMiles / milesPerGallon;
        double totalCost = numberOfGallons * price;
        System.out.println(totalCost);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Line 5 is missing a semicolon.  Line 6 has <c>Double</c> instead of <c>double</c>.  Remember that the primitive types all start with a lowercase letter.  Line 8 has <c>tripmiles</c> instead of <c>tripMiles</c>.  Remember that you should uppercase the first letter of each new word to make the variable name easier to read (use camel case).</p>

<exercise label="ch3Ex1a">
    <statement>
                <p>This is the answer for the previous question.</p>

    </statement>
    <program xml:id="ch3Ex1a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int tripMiles = 300;
        double price = 2.50;
        int milesPerGallon = 30;
        double numberOfGallons = tripMiles / milesPerGallon;
        double totalCost = numberOfGallons * price;
        System.out.println(totalCost);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should calculate the body mass index (BMI) for someone who is 5 feet tall and weighs 110 pounds.  However, the code has syntax errors, like missing semicolons, wrong case on names, or unmatched <c>"</c> or <c>(</c>. Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex2q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double Height = 60;    // in inches (60 inches is 5 feet)
        double weight  110;    // in pounds
        double heightSquared = height  height;
        double bodyMassIndex = weight / heightSquared
        double bodyMassIndexMetric = bodyMassIndex * 703;
        System.out.println(bodyMassIndexMetric);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "21.480555555555554\n";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Line 5 has Height instead of height.  Remember that variable names should start with a lowercase letter.  Line 6 is missing an equal sign.  Line 7 is missing a * to square the height.  Line 8 is missing a semicolon at the end of the statement.


    
                This is the answer for the previous question.

    
    <program xml:id="ch3Ex2a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double height = 60;    // in inches (60 inches is 5 feet)
        double weight = 110;    // in pounds
        double heightSquared = height * height;
        double bodyMassIndex = weight / heightSquared;
        double bodyMassIndexMetric = bodyMassIndex * 703;
        System.out.println(bodyMassIndexMetric);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Line 5 has <c>Height</c> instead of <c>height</c>.  Remember that variable names should start with a lowercase letter.  Line 6 is missing an equal sign.  Line 7 is missing a <c>*</c> to square the height.  Line 8 is missing a semicolon at the end of the statement.</p>

<exercise label="ch3Ex2a">
    <statement>
                <p>This is the answer for the previous question.</p>

    </statement>
    <program xml:id="ch3Ex2a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double height = 60;    // in inches (60 inches is 5 feet)
        double weight = 110;    // in pounds
        double heightSquared = height * height;
        double bodyMassIndex = weight / heightSquared;
        double bodyMassIndexMetric = bodyMassIndex * 703;
        System.out.println(bodyMassIndexMetric);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should calculate the number of miles that you can drive when you have $8.00 and the price of gas is 2.35 and the car gets 40 miles per gallon.  However, the code has errors.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex3q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        gallonPrice = 2.35;
        40 = double milesPerGallon;
        double totalFunds = 8.0;
        double numGallons = totalFunds gallonPrice;
        double numMiles = numGallons * milesPerGallon;
        System.out.println(numMiles;
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;
   public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "136.17021276595744\n";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Line 5 is missing the type double.  Line 6 is backwards.  It should be double milesPerGallon = 40;.  Line 8 is missing a /.  Line 10 is missing a ).


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex3a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double gallonPrice = 2.35;
        double milesPerGallon = 40;
        double totalFunds = 8.0;
        double numGallons = totalFunds / gallonPrice;
        double distance = numGallons * milesPerGallon;
        System.out.println(distance);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Line 5 is missing the type <c>double</c>.  Line 6 is backwards.  It should be <c>double milesPerGallon = 40;</c>.  Line 8 is missing a <c>/</c>.  Line 10 is missing a <c>)</c>.</p>

<exercise label="ch3Ex3a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex3a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double gallonPrice = 2.35;
        double milesPerGallon = 40;
        double totalFunds = 8.0;
        double numGallons = totalFunds / gallonPrice;
        double distance = numGallons * milesPerGallon;
        System.out.println(distance);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should calculate the cost of an item that is on clearance (70% off) when you also have a coupon for an additional 20% off the clearance price.  However, the code has errors.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex4q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int originalPrice = 68.00;
        int clearancePrice = originalPrice * 0.3;
        int finalPrice = clearancePrice * 0.8;
        System.out.println(finalPrice);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;
  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "16.32\n";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Lines 5, 6, and 7 should all be double versus int so that the decimal portion of the calculation isn’t thrown away.


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex4a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double originalPrice = 68.00;
        double clearancePrice = originalPrice * 0.3;
        double finalPrice = clearancePrice * 0.8;
        System.out.println(finalPrice);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Lines 5, 6, and 7 should all be <c>double</c> versus <c>int</c> so that the decimal portion of the calculation isn’t thrown away.</p>

<exercise label="ch3Ex4a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex4a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double originalPrice = 68.00;
        double clearancePrice = originalPrice * 0.3;
        double finalPrice = clearancePrice * 0.8;
        System.out.println(finalPrice);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>The following code should calculate the number of whole days in 320893 seconds. However, the code has errors.  Fix the code so that it compiles and runs correctly.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex5q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int numSecs = 320893;
        int numHours = numSecs   3600;
        int numDays = numHours   24;
        System.out.println numDays);

}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;
  public class RunestoneTests extends CodeTestHelper
  {
      @Test
      public void testMain() throws IOException
      {
          String output = getMethodOutput("main");
          String expect = "3\n";
          boolean passed = getResults(expect, output, "Expected output from main");
          assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Lines 6 and 7 are both missing a /.  Line 8 is missing a (.  Line 9 is missing a } to close the main method.


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex5a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int numSecs = 320893;
        int numHours = numSecs / 3600;
        int numDays = numHours / 24;
        System.out.println(numDays);
     }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Lines 6 and 7 are both missing a <c>/</c>.  Line 8 is missing a <c>(</c>.  Line 9 is missing a <c>}</c> to close the <c>main</c> method.</p>

<exercise label="ch3Ex5a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex5a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int numSecs = 320893;
        int numHours = numSecs / 3600;
        int numDays = numHours / 24;
        System.out.println(numDays);
     }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Complete the code below to calculate and print how many months it will take to save $200 if you earn $20 a week.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex6q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
      double goal =
      double weeklyRate =
      double numWeeks =
      double numMonths =
      System.out.println(numMonths);
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;
  //import java.util.regex.*;
  /* Do NOT change Main or CodeTestHelper.java. */
  public class RunestoneTests extends CodeTestHelper
  {
    @Test
    public void testMain() throws IOException
    {
      String output = getMethodOutput("main");
      String expect = "2.5\n";
      boolean passed = getResults(expect, output, "Expected output from main");
      assertTrue(passed);
    }

    @Test
    public void testFormulaNumMonths() throws IOException
    {
      String target = "double numMonths = numWeeks / 4;";
      boolean passed = checkCodeContains("formula for numMonths", target);
      assertTrue(passed);
      }
  }
</tests>

    </program>
      <solution>
                Calculate how many weeks it would take to make $200.  Next divide the number of weeks by 4 (roughly the number of weeks in a month).


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex6a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double weeklyRate = 20;
        double goal = 200;
        double numWeeks = goal / weeklyRate;
        double numMonths = numWeeks / 4;
        System.out.println(numMonths);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Calculate how many weeks it would take to make $200.  Next divide the number of weeks by 4 (roughly the number of weeks in a month).</p>

<exercise label="ch3Ex6a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex6a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double weeklyRate = 20;
        double goal = 200;
        double numWeeks = goal / weeklyRate;
        double numMonths = numWeeks / 4;
        System.out.println(numMonths);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Write the code to calculate the number of miles you can drive if you have a 10 gallon gas tank and are down to a quarter of a tank of gas and your car gets 32 miles per gallon.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex7q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
       // Your code should use the variables
       // numGallons, milesPerGallon, and miles
       // and print out miles
    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
    @Test
    public void testMain() throws IOException
    {
      String output = getMethodOutput("main");
      String expect = "80.0\n";
      boolean passed = getResults(expect, output, "Expected output from main");
      assertTrue(passed);
    }

  @Test
    public void testFormulaMiles() throws IOException
    {
      String target1 = removeSpaces("double miles = numGallons * milesPerGallon;");
      String target2 = removeSpaces("double miles = milesPerGallon * numGallons;");
      String code = removeSpaces(getCode());

      boolean passed1 = code.contains(target1);
      boolean passed2 = code.contains(target2);

      boolean passed = passed1 || passed2;

      getResults("true", ""+passed, "formula for miles using milesPerGallon and numGallons", passed);
      assertTrue(passed);
    }
  }
</tests>

    </program>
      <solution>
                First calculate the number of gallons you have left and then multiply that by the miles per gallon to get the number of miles you can still drive.


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex7a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double numGallons = 10.0 / 4;
        double milesPerGallon = 32;
        double miles = numGallons * milesPerGallon;
        System.out.println(miles);

    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>First calculate the number of gallons you have left and then multiply that by the miles per gallon to get the number of miles you can still drive.</p>

<exercise label="ch3Ex7a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex7a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double numGallons = 10.0 / 4;
        double milesPerGallon = 32;
        double miles = numGallons * milesPerGallon;
        System.out.println(miles);

    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Write the code to calculate the number of seconds in 3 days.  Remember that there are 60 seconds in a minute and 60 minutes in an hour and 24 hours in a day.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex8q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
       // Your code should use the variables
       // secondsInDay and secondsInThreeDays
       // and print out secondsInThreeDays

    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;
  public class RunestoneTests extends CodeTestHelper
  {
    @Test
    public void testMain() throws IOException
    {
      String output = getMethodOutput("main");
      String expect = "259200\n";
      boolean passed = getResults(expect, output, "Expected output from main");
      assertTrue(passed);
    }

  @Test
    public void testFormulaMiles() throws IOException
    {
      String target1 = removeSpaces("int secondsInThreeDays = secondsInDay * 3;");
      String target2 = removeSpaces("int secondsInThreeDays = 3 * secondsInDay;");
      String code = removeSpaces(getCode());
      boolean passed1 = code.contains(target1);
      boolean passed2 = code.contains(target2);

      boolean passed = passed1 || passed2;
      getResults("true", "" + passed, "formula for secondsInThreeDays using secondsInDay", passed);
      assertTrue(passed);
    }
  }
</tests>

    </program>
      <solution>
                First compute the number of seconds in 1 day and then multiple that by 3 days.


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex8a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int secondsInMinute = 60;
        int minutesInHour = 60;
        int hoursInDay = 24;
        int secondsInDay = secondsInMinute * minutesInHour * hoursInDay;
        int secondsInThreeDays = secondsInDay * 3;
        System.out.println(secondsInThreeDays);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>First compute the number of seconds in 1 day and then multiple that by 3 days.</p>

<exercise label="ch3Ex8a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex8a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        int secondsInMinute = 60;
        int minutesInHour = 60;
        int hoursInDay = 24;
        int secondsInDay = secondsInMinute * minutesInHour * hoursInDay;
        int secondsInThreeDays = secondsInDay * 3;
        System.out.println(secondsInThreeDays);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
    <exercise >
      <statement>
                <p>Write the code to print the number of chicken wings you can buy if you have $4.50 and they cost $0.75 each.  Remember that you can’t buy part of a wing.</p>

    </statement>
      <program interactive="activecode" language="java" xml:id="ch3Ex10q_editor">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
      // Your code should use the variables
      // money, pricePerWing, numWings
      // and print out numWings

    }
}
        </input>
<tests>
import static org.junit.Assert.*;
  import org.junit.*;
  import java.io.*;

  public class RunestoneTests extends CodeTestHelper
  {
    @Test
    public void testMain() throws IOException
    {
      String output = getMethodOutput("main");
      String expect = "6\n";
      boolean passed = getResults(expect, output, "Expected output from main");
      assertTrue(passed);
    }

    @Test
    public void testFormulaWings() throws IOException
    {
      String target = "int numWings = (int)(money / pricePerWing)";
      boolean passed = checkCodeContains("formula for numWings using money and pricePerWing, and type casting", target);
      assertTrue(passed);
    }
  }
</tests>

    </program>
      <solution>
                Divide the amount of money you have by the cost of each wing and set the result to an integer since you can’t buy a part of a wing.


    
                This is the answer to the previous question.

    
    <program xml:id="ch3Ex10a_editor" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double money = 4.5;
        double pricePerWing = 0.75;
        int numWings = (int) (money / pricePerWing);
        System.out.println(numWings);
    }
}
        </input>
<tests>


</tests>

    </program>

            
                <p>Divide the amount of money you have by the cost of each wing and set the result to an integer since you can’t buy a part of a wing.</p>

<exercise label="ch3Ex10a">
    <statement>
                <p>This is the answer to the previous question.</p>

    </statement>
    <program xml:id="ch3Ex10a_editor" interactive="activecode" language="java">

        <input>
public class Test1
{
    public static void main(String[] args)
    {
        double money = 4.5;
        double pricePerWing = 0.75;
        int numWings = (int) (money / pricePerWing);
        System.out.println(numWings);
    }
}
        </input>
<tests>


</tests>

    </program>
</exercise>
            </solution>
    </exercise>
  </exercises>
</section>
